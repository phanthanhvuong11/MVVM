name: Android Release on Main Merge

on:
  pull_request:
    branches: [main, master]
    types:
      - closed

permissions:
  contents: write

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # needed for git tag

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Get app version from build.gradle
        id: get_version
        run: |
          VERSION_NAME=$(grep versionName app/build.gradle | head -1 | cut -d '"' -f2)
          echo "VERSION=$VERSION_NAME"
          echo "VERSION=$VERSION_NAME" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tag_check
        run: |
          TAG="v${{ steps.get_version.outputs.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tagging."
            echo "SKIP_TAG=true" >> $GITHUB_OUTPUT
          else
            echo "SKIP_TAG=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git Tag
        if: steps.tag_check.outputs.SKIP_TAG == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.get_version.outputs.VERSION }}
          git push origin v${{ steps.get_version.outputs.VERSION }}

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: "Release v${{ steps.get_version.outputs.VERSION }}"
          files: app/build/outputs/apk/release/app-release.apk
